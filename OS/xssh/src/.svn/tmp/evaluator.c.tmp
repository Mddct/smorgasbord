#include <stdio.h>
#include <stdlib.h>
#include "evaluator.h"
#include "xssh.h"

<<<<<<< .mine
void debugCMD(Builtin * command){
	int i;
	
	printf("Debugging level %d\n", debug_level);
	printf("Expression: %s\n", command -> cmd);
	printf("Input file: %s\n", command -> inFile);
	printf("Output file: %s\n", command -> outFile);
	printf("Arguments: \n");
	for(i = 0; i < exp -> n; i++){
		printf("s", exp -> values[i]);
	}
	printf("\n");
}=======
#include <stdio.h>
#include <stdlib.h>
#include "evaluator.h"
#include "xssh.h"

void evaluateLine(Builtin * command, char* line){

	int i = 0;
	char* current;

	current = strtok(line, " ");
	
	if (!strcmp(current, "//")){
		return;
		}
	
	
	switch(code(current)){
       case ECHO:
			command->cmd = ECHO;
		 break;

       case QUIT:
		 command->cmd = QUIT;
		 break;
	   
	   case SET:
		command->cmd = SET;
	     break;
	   
	   case UNSET:
		command->cmd = UNSET;
	     break;

	   case WAIT:
		command->cmd = WAIT;
	     break;
	 
	   case CD:
		command->cmd = CD;
	     break;
	 
	   case CHDIR:
		command->cmd = CHDIR;
	     break;

       case NONE:
		 command->cmd = NONE;
		 break;
		 
		 default:
		 printf("Not a valid expression\n");
		 break;
	 }

	
	while (current != NULL){

		if (strcmp(current, "-d1") == 0){
			debug_level = 1;
		}
		else if (strcmp(current, "-d0") == 0){
			debug_level = 0;
		}
		
		command->values[i] = current;
		i++;
		current = strtok(NULL, " ");
		
		}
		
	command->n = i;
	
	
		
	return;
	}>>>>>>> .r9
